{"name": "test_create[create01]", "status": "failed", "statusDetails": {"message": "AssertionError: 响应状态码断言失败", "trace": "self = <testcase.test_dump_image.TestDump object at 0x1051aa3a0>\ncreate = {'assert': {'assert_data01': {'jsonpath': '$.code', 'type': '==', 'value': 1}, 'status_code': 200}, 'data': None, 'dep..., 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.tenant_access_token', 'set_cache': 'token'}]}], ...}\n\n    @pytest.mark.parametrize('create', case_data02, ids=case_id02)\n    def test_create(self, create):\n        response = RequestsContorl(create).http_requests()\n        # assert response.status_code == 200, f\"创建订阅号文章: {response.text}\"\n        # set_global_data(\"message_id\", response.json()[\"data\"][\"message_id\"])\n>       AassertCode(res_data=response.json(), status_code=response.status_code, assert_data=create.get('assert')).assert_type_handle()\n\ntestcase/test_dump_image.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.assert_tool.assert_control.AassertCode object at 0x105323e20>\n\n    def assert_type_handle(self):\n        self.get_assert_data()   # 这里调用 是为了判断 是否有 yaml文件中是否编写了断言数据\n        _assert_list = []\n        for k, v in self.assert_data.items():\n            if k == \"status_code\":\n>               assert v == self.status_code, \"响应状态码断言失败\"\nE               AssertionError: 响应状态码断言失败\n\nutils/assert_tool/assert_control.py:63: AssertionError"}, "attachments": [{"name": "log", "source": "87d09ca0-9562-4fe0-bedc-6ec210dab805-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "create", "value": "{'url': 'https://open.feishu.cn/open-apis/subscriptions/v1/accounts/6994262711681007620/messages', 'method': 'POST', 'headers': {'Authorization': 'Bearer $cache{token}', 'Content-Type': 'multipart/form-data; boundary=---7MA4YWxkTrZu0gW'}, 'params': None, 'requestType': 'json', 'json': {'articles': [{'title': '每日飞书小知识2345', 'cover': {'origin_cover': 'https://p1-lark-subs.feishucdn.com/tos-cn-i-21qjs0gem7/4cf5a401ed394debad46e5092cdb281e~tplv-21qjs0gem7-jpg.image', 'message_cover': 'https://p1-lark-subs.feishucdn.com/tos-cn-i-21qjs0gem7/4cf5a401ed394debad46e5092cdb281e~tplv-21qjs0gem7-jpg.image', 'article_cover': 'https://p1-lark-subs.feishucdn.com/tos-cn-i-21qjs0gem7/4cf5a401ed394debad46e5092cdb281e~tplv-21qjs0gem7-jpg.image'}, 'content': '<p>content here</p>', 'external_link_url': 'https://www.sample.cn', 'article_type': 1, 'content_source_url': 'www.sample.com', 'author': '飞书小助手', 'i18n_title': {'zh_cn': 'API中文内容', 'en_us': '英文内容', 'ja_jp': '日本語の内容'}, 'i18n_content': {'zh_cn': '123456中文内容', 'en_us': '英文内容', 'ja_jp': '日本語の内容'}, 'article_config': {'allow_comment': True, 'allow_forward': True, 'share_type': 1, 'comment_display_type': 1}, 'digest': '这里是内容摘要'}]}, 'data': None, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'token01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.tenant_access_token', 'set_cache': 'token'}]}], 'assert': {'assert_data01': {'jsonpath': '$.code', 'type': '==', 'value': 1}, 'status_code': 200}}"}], "start": 1693128863983, "stop": 1693128864183, "uuid": "5c0d43bb-639c-42fb-a889-989e3f64478e", "historyId": "d2f03f57bf2703d03971cc0a8afa5ca1", "testCaseId": "baf48aa92ac04f470556eabc4d13d12a", "fullName": "testcase.test_dump_image.TestDump#test_create", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_dump_image"}, {"name": "subSuite", "value": "TestDump"}, {"name": "host", "value": "AlvisdeMacBook-Pro.local"}, {"name": "thread", "value": "67729-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_dump_image"}]}