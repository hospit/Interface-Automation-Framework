{"name": "test_fileupload[DumpImage01]", "status": "broken", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'get'", "trace": "self = <testcase.test_dump_image.TestDump object at 0x10432a190>\ndump = {'assert': {'assert_data01': {'jsonpath': '$.code', 'type': '==', 'value': 0}, 'status_code': 200}, 'data': None, 'dep..., 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.tenant_access_token', 'set_cache': 'token'}]}], ...}\n\n    @pytest.mark.parametrize(\"dump\", case_data01, ids=case_id01)\n    def test_fileupload(self, dump):\n>       res = RequestsContorl(dump).http_requests()\n\ntestcase/test_dump_image.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/requeststool/requests_tool.py:26: in http_requests\n    DependentControl(self._case_data).run()\nutils/api_dependent/dependent_tool.py:97: in run\n    self.analyze()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.api_dependent.dependent_tool.DependentControl object at 0x104404c70>\n\n    def analyze(self):\n        \"\"\"\n        提取 case_data里 dependence_case 和 dependence_case_data，进行是否有依赖数据判断\n        有依赖数据 者进行下步操作\n        :return:\n        \"\"\"\n        _dep_data = self._case_data.get('dependence_case')\n        _req_data = self._case_data.get('dependence_case_data')\n        if _dep_data is True:\n            if _req_data is not None:\n                # 加for 是因为 yaml dependence_case_data 的value 是列表格式，\n                # 设置成列表格式 是处理 多个依赖数据情况，所以这里要for 确保每个依赖都获取\n                for i in _req_data:\n                    # 从 缓存 池 中 获取，依赖case数据\n                    _new_data = self.get_cache(i.get('case_id'))\n                    # 替换 case中的依赖数据，可以 防止其它 case 获取到依赖数据后，重复请求\n                    # 2023-08-27 追加： 这里 替换依赖数据并没有 实现防止重复请求\n                    _new_case_data = ast.literal_eval(cache_regular(str(_new_data)))\n                    # 请求 case获取依赖数据，并且请求模块中有 调用dependent_tool模块 解决连续依赖问题\n                    _res = RequestsContorl(_new_case_data).http_requests()\n                    # dependent_data的value 为列表，是用例处理 一个依赖接口中有多个依赖 数据\n                    for _dep_data in i.get('dependent_data'):\n                        # 2023-08-27 追加： 由于上方并 为解决重复请求问题，下方加个判断 来防止，依赖数据重复写入\n                        _cache_data = YamlRead.read_yaml_data(ensure_path_sep('/temp/temp_cache.yaml'))\n>                       if _cache_data.get(_dep_data.get('set_cache')) is False:\nE                       AttributeError: 'NoneType' object has no attribute 'get'\n\nutils/api_dependent/dependent_tool.py:58: AttributeError"}, "attachments": [{"name": "log", "source": "48c8800d-d236-4f87-9ea4-f628f2cb5e58-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "dump", "value": "{'url': 'https://open.feishu.cn/open-apis/subscriptions/v1/images/transfer', 'method': 'POST', 'headers': {'Authorization': 'Bearer $cache{token}', 'Content-Type': 'multipart/form-data; boundary=---7MA4YWxkTrZu0gW'}, 'params': None, 'requestType': 'json', 'json': {'original_url': 'https://p1-lark-subs.feishucdn.com/tos-cn-i-21qjs0gem7/4cf5a401ed394debad46e5092cdb281e~tplv-21qjs0gem7-jpg.image'}, 'data': None, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'token01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.tenant_access_token', 'set_cache': 'token'}]}], 'assert': {'assert_data01': {'jsonpath': '$.code', 'type': '==', 'value': 0}, 'status_code': 200}}"}], "start": 1693127940892, "stop": 1693127941044, "uuid": "f9bc36d7-896d-42fe-890b-a3575c7948f6", "historyId": "095a69340fad58f7afecce2608783d7d", "testCaseId": "a7f0e5819b98c2c798533a57617eb194", "fullName": "testcase.test_dump_image.TestDump#test_fileupload", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_dump_image"}, {"name": "subSuite", "value": "TestDump"}, {"name": "host", "value": "AlvisdeMacBook-Pro.local"}, {"name": "thread", "value": "67423-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_dump_image"}]}