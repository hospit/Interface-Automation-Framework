{"name": "test_fileupload[DumpImage01]", "status": "failed", "statusDetails": {"message": "AssertionError: 响应状态码断言失败", "trace": "self = <testcase.test_dump_image.TestDump object at 0x1051aa1c0>\ndump = {'assert': {'assert_data01': {'jsonpath': '$.code', 'type': '==', 'value': 0}, 'status_code': 200}, 'data': None, 'dep..., 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.tenant_access_token', 'set_cache': 'token'}]}], ...}\n\n    @pytest.mark.parametrize(\"dump\", case_data01, ids=case_id01)\n    def test_fileupload(self, dump):\n        res = RequestsContorl(dump).http_requests()\n>       AassertCode(res_data=res.json(), status_code=res.status_code, assert_data=dump.get('assert')).assert_type_handle()\n\ntestcase/test_dump_image.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.assert_tool.assert_control.AassertCode object at 0x1051aaac0>\n\n    def assert_type_handle(self):\n        self.get_assert_data()   # 这里调用 是为了判断 是否有 yaml文件中是否编写了断言数据\n        _assert_list = []\n        for k, v in self.assert_data.items():\n            if k == \"status_code\":\n>               assert v == self.status_code, \"响应状态码断言失败\"\nE               AssertionError: 响应状态码断言失败\n\nutils/assert_tool/assert_control.py:63: AssertionError"}, "attachments": [{"name": "log", "source": "5d5d2d20-7011-4672-bea5-1d29593dc481-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "dump", "value": "{'url': 'https://open.feishu.cn/open-apis/subscriptions/v1/images/transfer', 'method': 'POST', 'headers': {'Authorization': 'Bearer $cache{token}', 'Content-Type': 'multipart/form-data; boundary=---7MA4YWxkTrZu0gW'}, 'params': None, 'requestType': 'json', 'json': {'original_url': 'https://p1-lark-subs.feishucdn.com/tos-cn-i-21qjs0gem7/4cf5a401ed394debad46e5092cdb281e~tplv-21qjs0gem7-jpg.image'}, 'data': None, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'token01', 'dependent_data': [{'dependent_type': 'response', 'jsonpath': '$.tenant_access_token', 'set_cache': 'token'}]}], 'assert': {'assert_data01': {'jsonpath': '$.code', 'type': '==', 'value': 0}, 'status_code': 200}}"}], "start": 1693128863507, "stop": 1693128863948, "uuid": "292c1166-b26d-4085-ac4e-82d07da60723", "historyId": "095a69340fad58f7afecce2608783d7d", "testCaseId": "a7f0e5819b98c2c798533a57617eb194", "fullName": "testcase.test_dump_image.TestDump#test_fileupload", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_dump_image"}, {"name": "subSuite", "value": "TestDump"}, {"name": "host", "value": "AlvisdeMacBook-Pro.local"}, {"name": "thread", "value": "67729-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_dump_image"}]}